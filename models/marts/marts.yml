version: 2
models:
  - name: fct_tasks
    description: Core fact table for tasks. The grain is one row per task instance from the source.
    columns:
      - name: childids
        description: list of subtasks
        config:
          meta: {}
          tags: []
        data_type: ARRAY<STRING>
      - name: column_id
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: completed_time
        description: |
          Timestamp when the task was completed / wont do.
          - Inferred from dbt snapshot.
          - Ticktick API do not provide this field (at least not reliably cause it only retrieve new task).
          - Timezone conversion available with env var DBT_TIMEZONE
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
          tags: []
        data_type: DATETIME
      - name: due_date
        description: |
          - Task due date time in "yyyy-MM-dd'T'HH:mm:ssZ"
          - Timezone conversion available with env var DBT_TIMEZONE
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
                - DAY_OF_MONTH_NUM
                - WEEK_NUM
                - MONTH_NUM
                - QUARTER_NUM
                - YEAR_NUM
          tags: []
        data_type: DATETIME
      - name: etag
        description: ephemeral slug generated by ticktick. Not useful for analytics.
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: gtd_work_type
        description: |
          optional field indicating if a task was done under
          - shallow work (during clarification) or 
          - deep work (scheduled properly into next action)
        config:
          meta:
            dimension:
              type: string
          tags: []
        data_type: STRING
      - name: is_allday
        description: All day
        config:
          meta: {}
          tags: []
        data_type: BOOLEAN
      - name: kind
        description: '"TASK" or "NOTE"'
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: parent_id
        description: Parent task id
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: priority
        description: 'Task priority. Value : None:0, Low:1, Medium:3, High5'
        config:
          meta: {}
          tags: []
        data_type: INT64
      - name: project_id
        description: Task project id
        config:
          meta:
            dimension:
              hidden: true
          tags: []
        data_type: STRING
      - name: reminders
        description: List of reminder triggers. Example [ "TRIGGER:P0DT9H0M0S", "TRIGGER:PT0S" ]
        config:
          meta: {}
          tags: []
        data_type: ARRAY<STRING>
      - name: repeat_flag
        description: |
          Recurring rules of task.
          - Example : "RRULE:FREQ=DAILY;INTERVAL=1"
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: sort_order
        description: Task sort order
        config:
          meta: {}
          tags: []
        data_type: INT64
      - name: start_date
        description: |
          - Start date time in "yyyy-MM-dd'T'HH:mm:ssZ". 
          - Timezone conversion available with env var DBT_TIMEZONE
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
          tags: []
        data_type: DATETIME
      - name: status
        description: 'Task completion status. Value : Normal: 0, Completed: 2'
        config:
          meta:
            dimension:
              type: number
          tags: []
        data_type: INT64
      - name: tags
        description: Array of tags assigned to the task.
        config:
          meta:
            hidden: true
          tags: []
        data_type: ARRAY<STRING>
      - name: task_id
        description: Task identifier
        config:
          meta:
            dimension:
              type: string
          tags: []
        data_type: STRING
      - name: timezone
        description: Task timezone
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: title
        description: Task title
        config:
          meta:
            dimension:
              type: string
              urls:
                - label: open in ticktick (mac)
                  url: >-
                    ticktick://ticktick.com/webapp/#p/${row.dim_projects.project_id.raw}/tasks/${row.fct_tasks.task_id.raw}
                - label: open in ticktick (web)
                  url: >-
                    https://ticktick.com/webapp/#p/${row.dim_projects.project_id.raw}/tasks/${row.fct_tasks.task_id.raw}
            additional_dimensions:
              dimension_grain:
                label: grain dimension
                type: string
                sql: |-
                  case 
                    when ${ld.parameters.fct_tasks.count_grain} = 'task' then ${TABLE}.title
                    when ${ld.parameters.fct_tasks.count_grain} = 'project' then ${dim_projects.project_name}
                    when ${ld.parameters.fct_tasks.count_grain} = 'folder' then ${dim_folders.folder_name}
                    END
                description: Dynamic grain dimension for group by
              parent_dimension_grain:
                description: Dynamic parent dimension of the dimension_grain
                label: parent grain dimension
                type: string
                sql: |-
                  case 
                    when ${ld.parameters.fct_tasks.count_grain} = 'task' then ${dim_projects.project_name}
                    when ${ld.parameters.fct_tasks.count_grain} = 'project' then ${dim_folders.folder_name}
                    when ${ld.parameters.fct_tasks.count_grain} = 'folder' then ${dim_folders.folder_name}
                    END
          tags: []
        data_type: STRING
      - name: updated_time
        description: |
          inferred updated time; Only available for completed task
          due to ticktick API limitation we had to workaround with
          snapshots.
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
          tags: []
        data_type: DATETIME
    config:
      meta:
        label: ticktick tasks explore
        primary_key: task_id
        joins:
          - join: dim_projects
            type: inner
            sql_on: |
              ${fct_tasks.project_id} = ${dim_projects.project_id}
              AND
              CASE 
                WHEN 'default_ld_param_value' in (${ld.parameters.fct_tasks.project_name}) then 1=1
                ELSE ${dim_projects.project_name} IN (${ld.parameters.fct_tasks.project_name})
                END
            relationship: many-to-one
          - join: fct_task_tags_bridge
            type: left
            sql_on: ${fct_tasks.task_id} = ${fct_task_tags_bridge.task_id}
            relationship: one-to-many
            hidden: true
          - join: dim_tags
            type: inner
            sql_on: |
              ${fct_task_tags_bridge.tag_id} = ${dim_tags.tag_id}
              AND
              CASE 
                WHEN 'default_ld_param_value' in (${ld.parameters.fct_tasks.tag_name}) then 1=1
                ELSE ${dim_tags.tag} IN (${ld.parameters.fct_tasks.tag_name})
                END
            relationship: many-to-one
          - join: dim_folders
            type: inner
            sql_on: |
              ${dim_folders.folder_id} = ${dim_projects.group_id}
              AND
              CASE 
                WHEN 'default_ld_param_value' in (${ld.parameters.fct_tasks.folder_name}) then 1=1
                ELSE ${dim_folders.folder_name} IN (${ld.parameters.fct_tasks.folder_name})
                END
          - join: dim_date_spine
            type: right
            label: Task due date spine
            sql_on: ${dim_date_spine.date_day} = ${fct_tasks.due_date}
        metrics:
          total_task_instances:
            label: Total Tasks
            type: count
            sql: ${TABLE}.task_id
            description: The total number of tasks.
          completed_tasks:
            label: Completed Tasks
            type: count_distinct
            sql: CASE WHEN ${TABLE}.status = 2 THEN ${TABLE}.task_id ELSE NULL END
            description: The number of completed tasks.
          count:
            label: Count
            type: count_distinct
            sql: |
              case 
                when ${ld.parameters.fct_tasks.count_grain} = 'task' then ${TABLE}.task_id
                when ${ld.parameters.fct_tasks.count_grain} = 'project' then ${dim_projects.project_id}
                when ${ld.parameters.fct_tasks.count_grain} = 'folder' then ${dim_folders.folder_id}
                -- put a dummy here to tell ld grab the param for tags as filter
                -- this else would never get evaluated.
                else ${dim_tags.tag_id}
                END
            description: Distinct task count
          overdue_tasks:
            label: Overdue Tasks
            type: count_distinct
            sql: |
              CASE WHEN 
                ${TABLE}.due_date < current_timestamp()
                AND ${TABLE}.status != 2 
              THEN ${TABLE}.task_id ELSE NULL END
            description: The number of tasks that are past their due date but not completed.
          completion_rate:
            label: Task Completion Rate
            type: number
            sql: SAFE_DIVIDE(${completed_tasks}, ${total_task_instances})
            format: percent
            description: The percentage of tasks that have been completed.
        parameters:
          count_grain:
            label: grain of counts
            options:
              - task
              - project
              - folder
            default: task
          folder_name:
            label: folder name
            description: Filter data by Folder (gtd horizon lvl2)
            options_from_dimension:
              model: dim_folders
              dimension: folder_name
            multiple: true
            default: [default_ld_param_value]
            allow_custom_values: true
          project_name:
            label: project name
            description: Filter data by Project (gtd horizon lvl1)
            options_from_dimension:
              model: dim_projects
              dimension: project_name
            multiple: true
            default: [default_ld_param_value]
            allow_custom_values: true
          tag_name:
            label: tag name
            description: Filter data by tags
            options_from_dimension:
              model: dim_tags
              dimension: tag
            multiple: true
            default: [default_ld_param_value]
            allow_custom_values: true
  - name: dim_projects
    description: Dimension table for projects.
    columns:
      - name: closed
        description: Project closed
        config:
          meta: {}
          tags: []
        data_type: BOOLEAN
      - name: color
        description: Project color
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: completed_time
        description: |
          Timestamp when the project was closed/archived.
          - Inferred from dbt snapshot.
          - Ticktick API do not provide this field.
          - Timezone conversion available with env var DBT_TIMEZONE
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
          tags: []
        data_type: DATETIME
      - name: group_id
        description: Project group identifier
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: kind
        description: "\"TASK\" or \"NOTE\"\n"
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: permission
        description: '"read", "write" or "comment"'
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: project_id
        description: Project identifier
        config:
          meta:
            dimension:
              type: string
          tags: []
        data_type: STRING
      - name: project_name
        description: Project name
        config:
          meta:
            dimension:
              type: string
          tags: []
        data_type: STRING
      - name: sort_order
        description: Order value
        config:
          meta: {}
          tags: []
        data_type: INT64
      - name: view_mode
        description: view mode, "list", "kanban", "timeline"
        config:
          meta: {}
          tags: []
        data_type: STRING
    config:
      meta:
        primary_key: project_id
        metrics:
          count:
            label: Count
            type: count_distinct
            sql: ${TABLE}.project_id
            description: Distinct project count
  - name: dim_tags
    description: Dimension table for tags. The grain is one row per unique tag.
    config:
      meta:
        metrics:
          count:
            label: Count
            type: count_distinct
            sql: ${TABLE}.tag_id
            description: Distinct tag count
        primary_key: tag_id
    columns:
      - name: tag
        description: A single tag assigned to the task.
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: tag_id
        description: Surrogate key for the tag.
        tests:
          - unique
          - not_null
        config:
          meta: {}
          tags: []
        data_type: STRING
  - name: fct_task_tags_bridge
    description: >-
      Bridge table connecting tasks to their tags. The grain is one row per task-tag relationship.
    columns:
      - name: tag_id
        description: Surrogate key for the tag.
        tests:
          - relationships:
              to: ref('dim_tags')
              field: tag_id
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: task_id
        description: Task identifier
        tests:
          - relationships:
              to: ref('fct_tasks')
              field: task_id
        config:
          meta: {}
          tags: []
        data_type: STRING
  - name: dim_folders
    config:
      meta:
        primary_key: folder_id
        metrics:
          count:
            label: Count
            type: count_distinct
            sql: ${TABLE}.folder_id
            description: Distinct folder count
    columns:
      - name: folder_id
        description: unique identifer of the folder
        config:
          meta: {}
          tags: []
        data_type: STRING
      - name: folder_name
        description: The folder name. Inferred from dummy project manually created by users
        config:
          meta: {}
          tags: []
        data_type: STRING
  - name: dim_date_spine
    columns:
      - name: date_day
        config:
          meta:
            dimension:
              type: date
              time_intervals:
                - RAW
                - DAY
                - HOUR
                - MINUTE
                - WEEK
                - MONTH
                - QUARTER
                - YEAR
                - DAY_OF_WEEK_INDEX
                - DAY_OF_WEEK_NAME
          tags: []
        data_type: DATETIME